= Alembic =

#type: node
#context: sop
#internal: alembic
#icon: SOP/alembic

"""Loads the geometry from an Alembic scene archive (`.abc`) file into a 
geometry network."""

@parameters

Reload Geometry:
    Clears the Alembic cache and reloads fresh geometry

File name:
    #id: fileName
    
    Path to the Alembic archive (`.abc`) file.

Frame:
    #id: frame
    
    The _Alembic_ frame at which to sample the geometry. The default value is
    `$F` (Houdini's current frame). If you need to offset the start time of the
    animation in the archive, you can add or subtract frames (e.g. `$F + 48`).

Frames per second:
    #id: fps
    
    Combined with the __Frame__ parameter, this is used to convert Alembic's
    time-based animation to Houdini frames. The default is `$FPS` (Houdini's
    current frames-per-second setting). If the archive file was created with a
    different FPS, you will need to enter it here.

Object Path:
    #id: objectPath
    
    A path to an object inside the archive -- if specified, the node will load
    only this object and its children. The default is blank, which means load
    all the geometry in the archive.

Object Pattern:
    Only objects matching this pattern will be loaded. This is a more generic and likely simpler way of specifying objects to be loaded than the __Object Path__.

Point Attributes:
    Only point attributes matching the given pattern will be loaded.

Vertex Attributes:
    Only vertex attributes matching the given pattern will be loaded.

Primitive Attributes:
    Only primitive attributes matching the given pattern will be loaded.

Detail Attributes:
    Only detail attributes matching the given pattern will be loaded.

NOTE:
    All intrinsic attributes on Alembic nodes will be created in all cases. For example, the `velocity` attribute on points will be created regardless of whether it matches the __Point Attribute__ pattern.

Include Xform:
    #id: includeXform
    
    Bake each object's world space transformation (relative to the root of the
    archive) into the object's points.

Primitive Groups:
    Whether to create group names on the Alembic shape nodes, or whether to use the transform (object) name. If a transform object has multiple shape nodes, it's sometimes useful to put the geometry into the same group.

Add Path Attribute:
    This option allows you to put the full path of the shape node into the named string attribute, since Houdini can mangle the group names (no special characters are allowed in group names).

Path Attribute:
    The name of the Path Attribute.

Remap attributes:
    #id: remapAttributes
    
    Use this multiparm to rename Alembic point, vertex, and/or primitive
    attributes to their Houdini equivalents. For example, remapping `MyColor`
    to `Cd` (diffuse color). Click the + button to add a new mapping.




